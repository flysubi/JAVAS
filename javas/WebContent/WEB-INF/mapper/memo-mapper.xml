<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memo">
	<insert id="send" parameterType="java.util.HashMap">
		insert into memo values
		(MEMO_SEQ.NEXTVAL,#{id}, #{receiver}, #{ta}, sysdate, #{category})
	</insert>

	<select id="list" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select t.*, to_date(to_char(sysdate))+1-ft_date as FT_DIFF from
		(select d.* from (select rownum as r, memo.* from memo
			<choose>
         <when test="option != '' and option != null">
            <choose>
               <when test="option == 'writer'">
                  where ft_sender=#{search}
               </when>
               <otherwise>
                        where
                        <foreach collection="arr" item="search2" separator=" or "
                           open="(" close=")">
                           (ft_content like #{search2})
                        </foreach>
               </otherwise>
            </choose>
            <if test="category != '' and category != null">
               and category = #{category}
            </if>
         </when>
         <when test="category != '' and category != null">
            where (category=#{category})
            <choose>
               <when test="option != '' and option != null">
                  <choose>
                     <when test="option == 'writer'">
                        where ft_sender=#{search}
                     </when>
                     <otherwise>
                              where
                              <foreach collection="arr" item="search2" separator=" or "
                                 open="(" close=")">
                                 (ft_content like #{search2})
                              </foreach>
                     </otherwise>
                  </choose>
               </when>
            </choose>
         </when>
      </choose>
		where ft_receiver = #{id} and ft_sender != #{id}
		ORDER by ft_num desc)d where r between #{start} and #{end})t
	</select>

	<select id="mylist" parameterType="java.util.HashMap" resultType="java.util.HashMap">
				select t.*, to_date(to_char(sysdate))+1-ft_date as FT_DIFF from
		(select d.* from (select rownum as r, memo.* from memo
			<choose>
         <when test="option != '' and option != null">
            <choose>
               <when test="option == 'writer'">
                  where ft_sender=#{search}
               </when>
               <otherwise>
                        where
                        <foreach collection="arr" item="search2" separator=" or "
                           open="(" close=")">
                           (ft_content like #{search2})
                        </foreach>
               </otherwise>
            </choose>
            <if test="category != '' and category != null">
               and category = #{category}
            </if>
         </when>
         <when test="category != '' and category != null">
            where (category=#{category})
            <choose>
               <when test="option != '' and option != null">
                  <choose>
                     <when test="option == 'writer'">
                        where ft_sender=#{search}
                     </when>
                     <otherwise>
                              where
                              <foreach collection="arr" item="search2" separator=" or "
                                 open="(" close=")">
                                 (ft_content like #{search2})
                              </foreach>
                     </otherwise>
                  </choose>
               </when>
            </choose>
         </when>
      </choose>
		where ft_receiver = #{id} and ft_sender = #{id}
		ORDER by ft_num desc)d where r between #{start} and #{end})t
	</select>

	<select id="countAll" resultType="java.lang.Integer">
		select count(*) from memo where
		category= '받은쪽지'
	</select>

	<select id="myCount" parameterType="java.util.HashMap"
		resultType="java.lang.Integer">
		select count(*) from memo where ft_receiver = #{id } and
		ft_sender = #{id }
	</select>

	<select id="readCount" parameterType="java.util.HashMap"
		resultType="java.lang.Integer">
		select count(*) from memo where category = '읽은쪽지'
	</select>




	<insert id="readMemo" parameterType="java.util.HashMap">
		insert into memo values
		(#{num},#{id},#{receiver}, #{ta}, #{date}, '읽은쪽지')
	</insert>

	<insert id="sMemo" parameterType="java.util.HashMap">
		insert into smemo values
		(#{num},#{id}, #{receiver}, #{ta}, #{date})
	</insert>

	<select id="saveCount" parameterType="java.lang.Integer">
		select count(*) from smemo
	</select>


	<delete id="delete" parameterType="java.util.HashMap">
		delete memo where ft_receiver = #{id} and
		<foreach collection="arr" item="num" separator=" or " open="("
			close=")">
			ft_num = #{num }
		</foreach>
	</delete>

	<delete id="saveDelete" parameterType="java.util.HashMap">
		delete smemo where ft_receiver = #{id} and
		<foreach collection="arr" item="num" separator=" or " open="("
			close=")">
			ft_num = #{num }
		</foreach>
	</delete>
</mapper>