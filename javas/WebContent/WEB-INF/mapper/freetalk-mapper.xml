<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="freetalk">
	<!-- 새글 등록시 -->
	<insert id="addNew" parameterType="java.util.HashMap">
		insert into freetalk values(freetalk_seq.nextval, #{writer}, #{title},
		#{content}, 0, sysdate, #{cate}
		<choose><when test="filename != '' and filename != null">
				, #{length}, #{filename}, #{fileuuid})
			</when>	<otherwise>	,null,null,null)</otherwise></choose>
	</insert>
	<!-- 특정 -->
	<select id="getTalks"  resultType="java.util.HashMap" parameterType="java.util.HashMap">
			select * from ( select rownum as r, tmp.* from (select * from (select f.*, c.*, to_char(sysdate) as today, to_char(writedate) as freeday from freetalk f left join 
		(select ft_num,count(*) as cnt from comments group by ft_num) c on f.num = c.ft_num)
			<choose>
         <when test="option != '' and option != null">
            <choose>
               <when test="option == 'writer'">
                  where writer=#{search}
               </when>
               <otherwise>
                        where
                        <foreach collection="arr" item="search2" separator=" or "
                           open="(" close=")">
                           (title like #{search2} or content like #{search2})
                        </foreach>
               </otherwise>
            </choose>
            <if test="category != '' and category != null">
               and category = #{category}
            </if>
         </when>
         <when test="category != '' and category != null">
            where (category=#{category})
            <choose>
               <when test="option != '' and option != null">
                  <choose>
                     <when test="option == 'writer'">
                        where writer=#{search}
                     </when>
                     <otherwise>
                              where
                              <foreach collection="arr" item="search2" separator=" or "
                                 open="(" close=")">
                                 (title like #{search2} or content like #{search2})
                              </foreach>
                     </otherwise>
                  </choose>
               </when>
            </choose>
         </when>
      </choose>
		<choose>
			<when test="sequence != '' and sequence != null">
			<choose>
				<when test="sequence == 'recommend'">
					order by recommend desc
				</when>
				<otherwise>
					order by title
				</otherwise>
			</choose>
			</when>
			<otherwise>
			order by num desc
			</otherwise>
		</choose>
		 ) tmp ) where r between #{start} and #{end}
	</select>
	
	
	
	<select id="countAll" resultType="java.lang.Integer" parameterType="java.util.HashMap">
		select count(*) from freetalk 
		<choose>
         <when test="option != '' and option != null">
            <choose>
               <when test="option == 'writer'">
                  where writer=#{search}
               </when>
               <otherwise>
                        where
                        <foreach collection="arr" item="search2" separator=" or "
                           open="(" close=")">
                           (title like #{search2} or content like #{search2})
                        </foreach>
               </otherwise>
            </choose>
            <if test="category != '' and category != null">
               and category = #{category}
            </if>
         </when>
         <when test="category != '' and category != null">
            where (category=#{category})
            <choose>
               <when test="option != '' and option != null">
                  <choose>
                     <when test="option == 'writer'">
                        where writer=#{search}
                     </when>
                     <otherwise>
                              where
                              <foreach collection="arr" item="search2" separator=" or "
                                 open="(" close=")">
                                 (title like #{search2} or content like #{search2})
                              </foreach>
                     </otherwise>
                  </choose>
               </when>
            </choose>
         </when>
      </choose>
	</select>
	<select id="getOne" resultType="java.util.HashMap"
		parameterType="java.lang.Integer">
		select * from (select f.*,c.*, sysdate - writedate diff from freetalk f 
       full join (select ft_num,count(*) as cnt from comments group by ft_num) c
        on f.num=c.ft_num )where num=#{num}
	</select>
	<insert id="addComment" parameterType="java.util.HashMap">
		insert into comments
		values(comments_seq.nextval, #{num}, #{writer}, #{content}, sysdate)
	</insert>
	<select id="getComment" resultType="java.util.HashMap"
		parameterType="java.lang.Integer">
		select c.*, to_Char(c.WRITEDATE) FC from comments c
		where ft_num=#{num} order by num
	</select>
	<insert id="loveUp" parameterType="java.util.HashMap">
		insert into love
		values(#{num}, #{id})
	</insert>
	<update id="recommend" parameterType="java.lang.Integer">
		update freetalk set
		recommend=recommend+1 where num=#{num}
	</update>
	<delete id="talkDel" parameterType="java.lang.Integer">
		delete from freetalk where
		num=#{num}
	</delete>
	<select id="loveCnt" parameterType="java.lang.Integer"
		resultType="java.lang.Integer">
		select count(*) from love where num=#{num}
	</select>
	<select id="loveId" parameterType="java.util.HashMap"
		resultType="java.lang.String">
		select id from love where num=#{num} and id=#{id}
	</select>
	<delete id="commDel" parameterType="java.lang.Integer">
		delete from comments where
		num=#{num}
	</delete>
	<select id="commId" resultType="java.util.HashMap"
		parameterType="java.lang.Integer">
		select * from comments where num=#{num}
	</select>
</mapper>